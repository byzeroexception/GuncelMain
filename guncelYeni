package helpp;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URL;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.WindowConstants;
import javax.swing.border.Border;

public class ATM { 

public static JFrame LOGİNMENU = new JFrame(); 
// public static JFrame PAGENAME = new JFrame(); 
// public static JFrame PAGENAME2 = new JFrame();

//area A00C2
//public static JPanel Page1     = new JPanel();
public static JPanel LoginPage = new JPanel();

//area A00C3
public static JPanel welcomPanel = new JPanel();
public static JLabel LMESSAGE = new JLabel();

//area A00C4
public static JPanel LoginNamePanel = new JPanel();
public static JLabel LNAME = new JLabel();

//area A00C5
public static JPanel LoginPassPanel = new JPanel();
public static JLabel LPASS = new JLabel();

//area A00C6
public static JPanel TextNamePanel = new JPanel();
public static JTextField  LNAME1 = new JTextField(10);

//area A00C7
public static JPanel TextPassPanel = new JPanel();
public static JPasswordField LPASS1 = new JPasswordField(10);

//area A0V4D
public static JButton SUBMİT = new JButton();

public static String[] login = {"7523","0101","2023","0001"};


public static String GG = "1024";


static void timeOut() {
	try {
		Thread.sleep(100);
	} catch (InterruptedException e) {
	
	}{
		
	}
}


/*************************************************************
*  EN      INFO             /   BİLGİLENDİRME            TR  *
* ---------------------------------------------------------- *
* A00C2  : LoginPage        *   GirişSayfası                 *
* A00C3  : WelcomeText      *   HoşgeldinizYazısı            *
* A00C4  : CustomerNumTxt   *   MüşteriNumarasıYazısı        *
* A00C5  : PasswordTxt      *   ŞifreYazısı                  *
* A00C6  : CustomerNumField *   MüşteriNumaraYazmaAlanı      *
* A00C7  : PasswordField    *   ŞifreYazmaAlanı              *
* PR3LX  : PARABANK_Frame   *   PARABANK_ÇERÇEVE             * 
* BL2KQ  : Frame_CnAddBlok  *   Çerçeve_BirleşenEklemeBloğu  *
* M323IC : MainRunBlok      *   AnaÇalıştırmaBloğu           * 
*                           *                                *
* ************************************************************/



//area A00C2
static void LoginPagePanelSetting() {
	LoginPage.setLayout(null);
	LoginPage.setBackground(Color.DARK_GRAY);
	LoginPage.setBounds(0, 0, 500, 250);
	
}

//area A00C3
static void welcomPanel() {
	welcomPanel.setBackground(Color.DARK_GRAY);
	welcomPanel.setBounds(70, 20, 350, 50);
}
static void LoginMessage() {
	LMESSAGE.setText("PARABANK'A HOŞGELDİNİZ");
	LMESSAGE.setForeground(Color.white);
	LMESSAGE.setFont(new Font("Serif", Font.PLAIN, 25));
	LMESSAGE.setBounds(140, 10, 500, 30);
	 
}

//area A00C4
static void LoginCustomerPanel() {
	LoginNamePanel.setBackground(Color.DARK_GRAY);
	LoginNamePanel.setBounds(25, 100, 200, 30);
	LoginNamePanel.setBorder(BorderFactory.createEmptyBorder(-2, 0, 0, -10));
}
static void LoginCustomerLabel() {
// LoginNamePanel.setBorder(BorderFactory.createEmptyBorder(30, 10, 10, 320)); 
 LNAME.setText("MÜŞTERİ NUMARASI : "); LNAME.setForeground(Color.white); 
 LNAME.setFont(new Font("Serif", Font.PLAIN, 18)); LNAME.setBounds(10, 10, 10,10);
}
//area A00C5 
static void LoginPassPanel() { 
 LoginPassPanel.setBackground(Color.DARK_GRAY); 
 LoginPassPanel.setBounds(25, 130, 200, 30); 
 LoginPassPanel.setBorder(BorderFactory.createEmptyBorder(-2, 0, 0,-140)); 
 } 
static void LoginPasswordLabel() { 
LPASS.setText("ŞİFRE : "); 
LPASS.setForeground(Color.white); LPASS.setFont(new Font("Serif", Font.PLAIN, 18)); 
LPASS.setBounds(10, 10, 10, 10);
}

//area A00C6
static void TextNamePanel() {
	TextNamePanel.setBackground(Color.DARK_GRAY);
	TextNamePanel.setBounds(228, 100, 150, 29);
	TextNamePanel.setBorder(BorderFactory.createEmptyBorder(1, 0, 0,20));	
}
static void TextNameField() {
	LNAME1.setBackground(new Color(90,90,90));
	LNAME1.setForeground(Color.white);
	LNAME1.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
	LNAME1.setFont(new Font("",Font.PLAIN,16));
}

//area A00C7
static void TextPassPanel() {
	TextPassPanel.setBackground(Color.DARK_GRAY);
	TextPassPanel.setBounds(228, 131, 150, 29);
	TextPassPanel.setBorder(BorderFactory.createEmptyBorder(1, 0, 0, 20));
}
static void TextPassField() {
	LPASS1.setBackground(new Color(90,90,90));
	LPASS1.setForeground(Color.white);
	LPASS1.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
	LPASS1.setFont(new Font("",Font.PLAIN,16));
}
static void Submit() {
	SUBMİT.setText("➜|");
	SUBMİT.setBackground(new Color(232,232,232));
	SUBMİT.setForeground(Color.DARK_GRAY);
	SUBMİT.setBounds(380, 119, 60, 20);
	SUBMİT.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
}
static void actionevent() { 
	SUBMİT.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent i754L) {
			timeOut();
			testIt();
		}
	});
}




static void testIt() {
	String CusNum = LNAME1.getText();
	String Pass   = LPASS1.getText();
	if(CusNum.equals(login[0])||
	   CusNum.equals(login[1])||
	   CusNum.equals(login[2])||
	   CusNum.equals(login[3])&& 
	   Pass.equals(GG)) {
		
		/**********************************************
		 *              Setting for testIt            *
		 * ------------------------------------------ *
		 * LOGİNMENU and LoginPage  show New Settings *
		 **********************************************/
		LOGİNMENU.dispose();
	current_sessionMenu();
	
	}
	else if(CusNum.equals("") || Pass.equals("")) {
		JOptionPane.showMessageDialog(null,"Müşteri Numarası ve Şifre alanı boş bırakılamaz","[Sistem][PARABANK]",JOptionPane.YES_OPTION);
	}
	else {
		JOptionPane.showMessageDialog(null,"Üzgünüz giriş bilgileriniz yanlış","[Sistem][PARABANK]",JOptionPane.YES_OPTION);
	}
	
}

//area PR3LX
static <Icon> void LoginMenu() {
	LOGİNMENU.setTitle("LoginPage/GirşSayfası");
   
//	URL url = ATM.class.getResource("/Icon.png");
//    LOGİNMENU.setIconImage(Toolkit.getDefaultToolkit().getImage(url));
	LOGİNMENU.setLayout(null);
	LOGİNMENU.getContentPane().setBackground(Color.black);
	LOGİNMENU.setSize(500,250);
	LOGİNMENU.setLocation(600,350);
	LOGİNMENU.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	LOGİNMENU.setResizable(false);
	LOGİNMENU.setVisible(true);
	addBlokLoginPage();
}

//area BL2KQ
static void addBlokLoginPage() {
 LoginPage.add(welcomPanel);
	welcomPanel.add(LMESSAGE);
	welcomPanel();
	LoginMessage();
			
 LoginPage.add(LoginNamePanel);
	LoginNamePanel.add(LNAME);
	LoginNamePanel.add(LNAME1);
	LoginCustomerPanel();
	LoginCustomerLabel();
			
 LoginPage.add(LoginPassPanel);
 	LoginPassPanel.add(LPASS);
 	LoginPassPanel();
 	LoginPasswordLabel();
													
 LoginPage.add(TextNamePanel);
 	TextNamePanel.add(LNAME1);
	TextNamePanel();
	TextNameField();
																
 LoginPage.add(TextPassPanel);
	TextPassPanel.add(LPASS1);
	TextPassField();
    TextPassPanel();
																				
    
    actionevent();	
	LoginPage.add(SUBMİT);																	
	Submit();
																		
	LOGİNMENU.add(LoginPage);
	LoginPagePanelSetting();
}
 



/*****************************************************************
 *  EN                     INFO / BİLGİLENDİRME              TR  *
 * ------------------------------------------------------------- *
 *               PAGE2 SystemUI / Sayfa2 SistemArayüzü           *
 * ------------------------------------------------------------- *
 *  * 
 *  *             
 *  *            
 *  *
 *  *             
 *  *            
 *  *             
 *  *             
 *  *             
 *  *             
 *  *             
 *  *             
 *  *            
 *****************************************************************/

// area P2FF3
public static JFrame current_sessionMenu = new JFrame();

// area P2M4F
public static JPanel sessionPanelMain = new JPanel();

// area P2FF2
public static JButton current_sessionCheckOut = new JButton();

// area P2FF4
public static JPanel current_sessionBalanceUI = new JPanel();
public static JLabel current_sessionBalance = new JLabel();
public static JLabel current_sessionBalanceF = new JLabel(); //fraction
	
// area P2FF5
public static JPanel current_sessionIdCustomerUI = new JPanel();
public static JLabel current_sessionIdCustomer = new JLabel();
	

// area P2FF7 
public static Icon image = new ImageIcon("UserIcon.png");
	
// area P2FF8
	public static JButton withdrawmoneySub = new JButton();
	public static JFrame withdrawmoneyTab = new JFrame();
	public static JPanel withdrawmoneyMainPanel = new JPanel();
	public static JPanel withdrawmoneyBalancePanel = new JPanel();
	public static JLabel withdrawmoneyBalanceTxt = new JLabel();
	public static JPanel withdrawmoneyBalanceShowPanel  = new JPanel();
	public static JLabel withdrawmoneyBalanceShowTxt = new JLabel();

	public static JButton pays = new JButton();
	public static JButton EFT  = new JButton();
	public static JButton setting = new JButton();
	public static JButton accounds = new JButton();
	public static JButton payments = new JButton();
	public static JButton profileSet = new JButton();
	
	public static int output = 0;
	public static int balance =999;
	public static int result;
	public static int input=0;
	
	public static String tr;
	public static String te;

	
	
	// area P2M4F
static void sessionPanelMain() {
	sessionPanelMain.setLayout(null);
	sessionPanelMain.setBackground(Color.DARK_GRAY);
	sessionPanelMain.setBounds(0, 0, 500, 300);	
}

//area P2FF3
static void current_sessionMenu() {
	Dimension dimension;
	current_sessionMenu.setTitle("SessionPage/OturumSayfası");
//	URL url = ATM.class.getResource("/sessionIcon.png");
//    current_sessionMenu.setIconImage(Toolkit.getDefaultToolkit().getImage(url));
    current_sessionMenu.setLayout(null);
	current_sessionMenu.getContentPane().setBackground(Color.DARK_GRAY);
	current_sessionMenu.setSize(500,300);
	current_sessionMenu.setLocation(600,350);
	current_sessionMenu.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
	current_sessionMenu.setResizable(false);
	current_sessionMenu.setVisible(true);
	addBlok_current_session();
}

//area P2FF2
static void current_sessionCheckOut() {
	current_sessionCheckOut.setText("Çıkış");
	current_sessionCheckOut.setBackground(Color.DARK_GRAY);
	current_sessionCheckOut.setBounds(424, 1, 50, 20);
	current_sessionCheckOut.setForeground(new Color(232,232,232));
//	current_sessionCheckOut.setFont(new Font("",Font.PLAIN,25));
	current_sessionCheckOut.setBorder(null);
}

//area P2FF1
static void current_sessionCheckOutLis() {
	current_sessionCheckOut.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent i33) {
			String[] answer = {"Evet","Hayır"};
			int n=JOptionPane.showConfirmDialog(null,"Çıkmak istediğinden emin misin?","Çıkış",JOptionPane.YES_NO_OPTION);
			if(n==JOptionPane.YES_OPTION) { JOptionPane.showMessageDialog(null,"Çıkış Başarılı, İyi Günler","ATM",JOptionPane.INFORMATION_MESSAGE); 
			timeOut();
			System.exit(0);
			}
		}
	});
}

// area P2FF4
static void current_sessionBalanceUI() {
	current_sessionBalanceUI.setLayout(null);
	current_sessionBalanceUI.setBounds(10, 20, 190, 70);
	current_sessionBalanceUI.setBackground(Color.DARK_GRAY);
}
// area P2FF4
static void current_sessionBalance() {
	tr = Integer.toString(balance);
	current_sessionBalance.setText(tr);
	current_sessionBalance.setForeground(new Color(232,232,232));
	current_sessionBalance.setBounds(1,1,170,50);
	current_sessionBalance.setFont(new Font("",Font.CENTER_BASELINE,50));
//	current_sessionBalance.setBorder(BorderFactory.createEmptyBorder());
}

// area P2FF5
static void current_sessionIdCustomerUI() {
	current_sessionIdCustomerUI.setBackground(Color.DARK_GRAY);
	current_sessionIdCustomerUI.setBounds(375, 2, 50, 18);
}

// arae P2FF5
static void current_sessionIdCustomer() {
	String a;
	a = LNAME1.getText();
	if(a.equals(login[0])||
	   a.equals(login[1])||
	   a.equals(login[2])||
	   a.equals(login[3])) {
		current_sessionIdCustomer.setText(a);
	}else {
		current_sessionIdCustomer.setText("Admin");

	}
	
	current_sessionIdCustomer.setForeground(new Color(232,232,232));
//	current_sessionIdCustomer.setBounds(1,1,70,50);
	current_sessionIdCustomer.setBorder(BorderFactory.createEmptyBorder(-4,0,0,0));
	current_sessionIdCustomer.setFont(new Font("",Font.BOLD,13));
}

// area P2FF8
static void withdrawmoney() {
	withdrawmoneySub.setText("Para Çek");
	withdrawmoneySub.setBackground(new Color(232,232,232));
	withdrawmoneySub.setForeground(Color.DARK_GRAY);
	withdrawmoneySub.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
	withdrawmoneySub.setBounds(10, 100, 90, 30);
}

// area P2FF8

static void withdrawmoneyLis() {
	withdrawmoneySub.addActionListener(new ActionListener(){
		public void actionPerformed(ActionEvent t22) {
			try {
			
			output =Integer.parseInt(JOptionPane.showInputDialog(null,"Çekilmek istenen tutar","ParaÇekme",JOptionPane.PLAIN_MESSAGE));
			if(output>balance) {
			JOptionPane.showMessageDialog(null,"işlem için bakiyeniz yetersizdir","ParaÇekmeHata",JOptionPane.CANCEL_OPTION);
			}
			else if(output<=0) {
				JOptionPane.showMessageDialog(null,"Lütfen geçerli bir değer giriniz.","Sistem",JOptionPane.ERROR_MESSAGE);
			}
			else if(output>=1000) {
				JOptionPane.showMessageDialog(null,"tek seferde 1000 ve altı para çekiniz","ParaÇekmeHata",JOptionPane.ERROR_MESSAGE);
			}
			else {
				balance -=output;
				te = Integer.toString(balance);
				current_sessionBalance.setText(te);
				JOptionPane.showMessageDialog(null,"Para Çekme işlemi başaralı! çekilen tutar : " + output,"ParaÇekme",JOptionPane.PLAIN_MESSAGE);

			}}catch(Exception f33) {
				JOptionPane.showMessageDialog(null,"lütfen sayı giriniz","SistemHata",JOptionPane.ERROR_MESSAGE);
			}
			
		}
	});
}

static void pays() {
	pays.setText("Para Yatır");
	pays.setBackground(new Color(232,232,232));
	pays.setForeground(Color.DARK_GRAY);
	pays.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
	pays.setBounds(105, 100, 90, 30);
}
//k444
static void paysLis() {
	pays.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent k444) {
			try {
		
				input =Integer.parseInt(JOptionPane.showInputDialog(null,"Yatırmak istenen tutar","ParaÇekme",JOptionPane.PLAIN_MESSAGE));
				if(input>=2000) {
				JOptionPane.showMessageDialog(null,"tek seferde 2000 ve altı para yatırınız","ParaYatırmaHata",JOptionPane.CANCEL_OPTION);
				}
				else if(input<=0) {
					JOptionPane.showMessageDialog(null,"Lütfen geçerli bir değer giriniz.","Sistem",JOptionPane.ERROR_MESSAGE);
				}
				else if(balance>=10000) {
					JOptionPane.showMessageDialog(null,"Bakiye 10999 üzeri olamaz!","Sistem",JOptionPane.ERROR_MESSAGE);
				}
				else {
					balance +=input;
					te = Integer.toString(balance);
					current_sessionBalance.setText(te);
					JOptionPane.showMessageDialog(null,"Para Yatırma işlemi başaralı! yatırılan tutar : " + input,"ParaYatırma",JOptionPane.PLAIN_MESSAGE);

				}}catch(Exception f33) {
					JOptionPane.showMessageDialog(null,"lütfen sayı giriniz","SistemHata",JOptionPane.ERROR_MESSAGE);
				}
		}
	});
}

static void EFT() {
	EFT.setText("HAVALE / EFT");
	EFT.setBackground(new Color(232,232,232));
	EFT.setForeground(Color.DARK_GRAY);
	EFT.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
	EFT.setBounds(200, 100, 90, 30);
}
static void EFTList() {
	EFT.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent d222) {
			JOptionPane.showMessageDialog(null,"HAVALE / EFT işlemi şuanda hizmet dışıdır.","Sistem",JOptionPane.INFORMATION_MESSAGE);
		}
	});
}
static void accounds() {
	accounds.setText("Hesaplarım");
	accounds.setBackground(new Color(232,232,232));
	accounds.setForeground(Color.DARK_GRAY);
	accounds.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
	accounds.setBounds(10, 135, 90, 30);
}
static void accoundsList() {
	accounds.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent d222) {
			JOptionPane.showMessageDialog(null,"Hesaplarım işlemi şuanda hizmet dışıdır.","Sistem",JOptionPane.INFORMATION_MESSAGE);
		}
	});
}

static void setting() {
	setting.setText("Ayarlar");
	setting.setBackground(new Color(232,232,232));
	setting.setForeground(Color.DARK_GRAY);
	setting.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
	setting.setBounds(105, 135, 90, 30);
}
static void settingList() {
	setting.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent d222) {
			JOptionPane.showMessageDialog(null,"Ayarlar işlemi şuanda hizmet dışıdır.","Sistem",JOptionPane.INFORMATION_MESSAGE);
		}
	});
}
static void payments() {
	payments.setText("Ödemeler");
	payments.setBackground(new Color(232,232,232));
	payments.setForeground(Color.DARK_GRAY);
	payments.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
	payments.setBounds(200, 135, 90, 30);
}
static void paymentsList() {
	payments.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent d222) {
			JOptionPane.showMessageDialog(null,"Ödemeler işlemi şuanda hizmet dışıdır.","Sistem",JOptionPane.INFORMATION_MESSAGE);
		}
	});
}
static void profileSet() {
	profileSet.setText("Profili Düzenle");
	profileSet.setBackground(new Color(232,232,232));
	profileSet.setForeground(Color.DARK_GRAY);
	profileSet.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
	profileSet.setBounds(10, 170, 280, 30);
}
static void profileSetList() {
	profileSet.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent d222) {
			JOptionPane.showMessageDialog(null,"Profili Düzenle işlemi şuanda hizmet dışıdır.","Sistem",JOptionPane.INFORMATION_MESSAGE);
		}
	});
}

//area P2FF0
static void addBlok_current_session() {

sessionPanelMain.add(current_sessionCheckOut);
		current_sessionCheckOut();
		current_sessionCheckOutLis();
		
sessionPanelMain.add(current_sessionBalanceUI);
		current_sessionBalanceUI();

current_sessionBalanceUI.add(current_sessionBalance);
		current_sessionBalance();
		
current_sessionMenu.add(sessionPanelMain);
		sessionPanelMain();

current_sessionMenu.add(current_sessionIdCustomerUI);
		current_sessionIdCustomer();

current_sessionIdCustomerUI.add(current_sessionIdCustomer);
		current_sessionIdCustomerUI();
 
sessionPanelMain.add(current_sessionIdCustomerUI);
 	
sessionPanelMain.add(withdrawmoneySub);
	
		withdrawmoney();
		withdrawmoneyLis();
		
sessionPanelMain.add(pays);
		pays();
		paysLis();
sessionPanelMain.add(EFT);
		EFT();
		EFTList();
sessionPanelMain.add(setting);
		setting();
		settingList();
sessionPanelMain.add(accounds);
		accounds();
		accoundsList();
sessionPanelMain.add(payments);
		payments();
		paymentsList();
sessionPanelMain.add(profileSet);
		profileSet();
		profileSetList();
		
}
static void testBlok() {
	
}


//area M323IC
public static void main(String [] args) {
//	LoginMenu();
current_sessionMenu();
}
}
